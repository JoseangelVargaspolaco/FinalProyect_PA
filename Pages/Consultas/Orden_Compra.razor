@page "/newarticulo"

@page "/newarticulo/{ArticuloId:int}"

@* Registro de nuevos articulos *@

@inject AuthenticationStateProvider Authentication

@inject IToastService Toast

@using BLL
@using BlazorStrap.Shared.Components.Modal

<EditForm Model="newarticulo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>

    <div class="card shadow-lg justify-content-center">

        <div class="card">

            <div class="card-header justify-content-center">
                <h3 class="card-title">
                    Registro Nuevo Articulos
                    <i class="oi oi-cart"></i>
                </h3>
            </div>

            <div class="card-body">
                <div class="row">
                    
                    @*...................... Buscar Id ......................*@
                    
                    <div class="form-group col-3" style="margin: auto;">
                        <label>Aportes ID</label>
                        <div class="form-r ow align-items-center">
                            <div class="col">
                                <div class="form-group">
                                    <div class="input-group">
                                        <InputNumber @bind-Value="newarticulo.ArticuloId" class="form-control"/>
                                        <div class="input-group-append">
                                            <button class="bi bi-search btn btn-outline-primary" type="button" @onclick="Buscar">
                                                <i class="oi oi-magnifying-glass"/>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*...................... Fecha ......................*@

                    <p/>
                    <div class="form-group col-3" style="margin: auto;">
                        <label>Fecha</label>
                        <InputDate @bind-Value="newarticulo.FechaCreacion" class="form-control"/>
                    </div>

                    @*...................... Nombre ......................*@

                    <div class="form-group col-3" style="margin: auto;">
                        <label>Nombre</label>
                        <InputText @bind-Value="newarticulo.Nombre" placeholder="Nombre articulo" class="form-control"/>
                        <ValidationMessage For="@(() => newarticulo.Nombre)"/>
                    </div>

                    @*...................... Categoria ......................*@

                    <div class="form-group col-3" style="margin: auto;">
                        <label>
                            Categoria
                            <div class="oi oi-sort-ascending"></div>
                        </label>
                        <InputSelect @bind-Value="newarticulo.CategoriaId" class="form-select text-14">
                            <option value="0" disabled selected>Seleccione</option>
                            @foreach (var item in CategoriaList)
                            {
                                <option value="@item.CategoriaId">@item.Descripcion</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => newarticulo.CategoriaId)"/>
                    </div>
                    <p/>

                    @*...................... Cantidad ......................*@

                    <div class="form-group col-3" style="margin: auto;">
                        <label>Cantidad</label>
                        <InputNumber @bind-Value="newarticulo.Cantidad" class="form-control"/>
                        <ValidationMessage For="@(() => newarticulo.Cantidad)"/>
                    </div>

                    @*...................... Conto / Unidad ......................*@

                    <div class="form-group col-3" style="margin: auto;">
                        <label>Costo / Unidad</label>
                        <InputNumber @bind-Value="newarticulo.Costo" class="form-control"/>
                        <ValidationMessage For="@(() => newarticulo.Costo)"/>
                    </div>

                    @*...................... Precio ......................*@

                    <div class="form-group col-3" style="margin: auto;">
                        <label>Precio</label>
                        <InputNumber @bind-Value="newarticulo.Precio" class="form-control"/>
                        <ValidationMessage For="@(() => newarticulo.Precio)"/>
                    </div>

                    @*...................... ITBIS ......................*@
                    <p/>
                    <div class="form-group col-3" style="margin: auto;">
                        <label>ITBIS</label>
                        <InputSelect @bind-Value="newarticulo.ITBIS" class="form-select text-14">
                            <option value="0" disabled selected>Seleccione un %</option>
                            <option value="0">0%</option>
                            <option value="18">18%</option>
                        </InputSelect>
                        <ValidationMessage For="@(() => newarticulo.ITBIS)"/>
                    </div>
                </div>
                <br>

                @*...................... Botones ......................*@

                <div class="card-footer">
                    <div class="form-group text-center" display: inline-block>

                        <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo" title="Nuevo articulo">
                            <span class="oi oi-file"> Nuevo</span>
                        </button>

                        <button type="submit" class="btn btn-lg btn-success" title="Guardar articulo">
                            <span class="oi oi-document"> Guardar</span>
                        </button>

                        <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar"
                                title="Eliminar articulo">
                            <span class="oi oi-trash"> Eliminar</span>
                        </button>
                    </div>
                </div>

                <p/>
                <div class="row">
                    <hr/>
                    <p/>
                    <table class="table table-light table-striped">
                        <thead class="thead">
                        <tr class="table text-center bg-inventariocolor">
                            <th>CÃ³digo</th>

                            <th>Nombre</th>

                            <th>Categoria</th>

                            <th>Cantidad</th>

                            <th>Costo / Unidad</th>

                            <th>Precio / Venta</th>

                            <th>ITBIS</th>

                            <th>Fecha Registro</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in ArticuloList)
                        {
                            if (item.FechaCreacion.Day <= Fecha.Day && item.FechaCreacion.Month <= Fecha.Month && item.FechaCreacion.Year <= Fecha.Year || item.Cantidad < 50)
                            {
                                Fecha = DateOnly.FromDateTime(item.FechaCreacion);
                                descripcion = categoriaBLL.Buscar(item.CategoriaId);
                                if (descripcion == null) break;
                                <tr class="text-center">
                                    <td>@item.ArticuloId</td>

                                    <td>@item.Nombre</td>

                                    <td>@descripcion.Descripcion</td>

                                    <td>@item.Cantidad</td>

                                    <td>RD$ @item.Costo</td>

                                    <td>RD$ @item.Precio</td>

                                    <td>@item.ITBIS %</td>

                                    <td>@Fecha</td>
                                </tr>
                            }
                        }
                        </tbody>
                    </table>
                    <p/>
                    <hr/>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public int ArticuloId { get; set; }

#nullable disable // Para quitar el aviso de nulls

    Articulo newarticulo = new Articulo();

    public DateOnly Fecha { get; set; }

    public Categoria descripcion { get; set; }


    [Inject]
    public CategoriaBLL categoriaBLL { get; set; } // Inyectando BLLS

    [Inject]
    public ArticuloBLL articuloBLL { get; set; } // Inyectando BLL

    private Articulo selectedArticulo;

    List<Categoria> CategoriaList = new List<Categoria>();

    List<Articulo> ArticuloList = new List<Articulo>();

    //-----------------------------------------------------------------------

    protected override void OnInitialized()
    {
        CategoriaList = categoriaBLL.GetList(c => true);
        ArticuloList = articuloBLL.GetList(a => true);

        if (ArticuloId > 0)
        {
            newarticulo.ArticuloId = ArticuloId;
        }
    }

    public void Nuevo() // Nuevo articulo
    {
        newarticulo = new Articulo();
        CategoriaList = categoriaBLL.GetList(c => true);
    }

    private void Buscar()
    {
        if (newarticulo.ArticuloId > 0)
        {
            var encontrado = articuloBLL.Buscar(newarticulo.ArticuloId);
            if (encontrado != null)
            {
                this.newarticulo = encontrado;
                Toast.ShowSuccess($"Articulo: {newarticulo.Nombre}, encontrado");

            }else{
                Toast.ShowWarning($"Articulo: {newarticulo.Nombre}, no encontrado");
            }
        }
    }
    
    public void Guardar() // Guardar articulo
    {
        if (newarticulo.Precio < newarticulo.Costo)
        {
            Toast.ShowWarning("El precio debe ser mayor al costo"); // Validacion
            return;
        }

        var articulo2 = articuloBLL.ExisteNombre(newarticulo.Nombre);
        if (articulo2 == null) //si no existe
        {
            if (articuloBLL.Guardar(newarticulo))
            {
                Toast.ShowSuccess($"Articulo: {newarticulo.Nombre}, Guardado correctamente");
                newarticulo = new Articulo();
            }
            else
                Toast.ShowError("No fue posible guardar");
        }
        else // si existe
        {
            if (articulo2.Nombre.ToLower() == newarticulo.Nombre.ToLower() && articulo2.ArticuloId == newarticulo.ArticuloId)
            {
                if (articuloBLL.Guardar(newarticulo))
                {
                    Toast.ShowSuccess($"Articulo: {newarticulo.Nombre}, Guardado correctamente");
                    newarticulo = new Articulo();
                }
                else
                    Toast.ShowError("No fue posible guardar");
            }
            else
            {
                Toast.ShowError($"Articulo: {newarticulo.Nombre}, ya esta registrado");
            }
        }
    }

    public void Eliminar() // Eliminar articulo
    {
        bool Eliminar;

        Eliminar = articuloBLL.Eliminar(newarticulo.ArticuloId);

        if (Eliminar)
        {
            newarticulo = new Articulo();
            CategoriaList = categoriaBLL.GetList(c => true);
            Toast.ShowSuccess("Eliminado correctamente");
        }
        else
            Toast.ShowError("No fue posible eliminar");
    }
    }

