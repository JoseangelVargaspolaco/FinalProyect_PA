@page "/suplidor"

@page "/suplidor/{SuplidorId:int}"

@* Registro de los suplidores *@

@inject AuthenticationStateProvider Authentication

@inject IToastService Toast

@using BLL

<EditForm Model="suplidor" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card shadow-lg">

        <div class="card ">

            <div class="card-header ">

                <h3 class="card-title">Registro Suplidores <div class="oi oi-person"></div>
                </h3>
            </div>

            <div class="card-body">
                <hr>

                @*...................... Nombre ......................*@

                <div class="row">

                    <div class="form-group col-3">
                        <label>Nombre Suplidor</label>
                        <InputText @bind-Value="suplidor.Nombre" placeholder="Nombre Suplidor" class="form-control" />
                        <ValidationMessage For="@(() => suplidor.Nombre)" />
                    </div>

                    @*...................... Dirección ......................*@


                    <div class="form-group col-3">
                        <label>Dirección</label>
                        <InputText @bind-Value="suplidor.Direccion" placeholder="Dirección" class="form-control" />
                        <ValidationMessage For="@(() => suplidor.Direccion)" />
                    </div>

                    @*...................... Email ......................*@

                    <div class="form-group col-3">
                        <label>Email</label>
                        <InputText @bind-Value="suplidor.Email" placeholder="Correro electronico"
                            class="form-control" />
                        <ValidationMessage For="@(() => suplidor.Email)" />
                    </div>
                    <br>
                    <p />

                    <div class="row">

                        @*...................... Telefono ......................*@

                        <div class="form-group col-3">
                            <label>Teléfono</label>
                            <InputText @bind-Value="suplidor.Telefono" placeholder="Numero teléfonico"
                                class="form-control" />
                            <ValidationMessage For="@(() => suplidor.Telefono)" />
                        </div>

                        @*...................... Descripción Articulo ......................*@

                        <div class="form-group col-3">
                            <label>Descripción Articulo</label>
                            <InputText @bind-Value="suplidor.DescripcionArticulo" placeholder="Descripción Articulo"
                                class="form-control" />
                            <ValidationMessage For="@(() => suplidor.DescripcionArticulo)" />
                        </div>

                        @*...................... Fecha Ingreso ......................*@

                        <div class="form-group col-2">
                            <label>Fecha Ingreso </label>
                            <InputDate @bind-Value="suplidor.Fecha" class="form-control" />
                        </div>
                    </div>

                    @*...................... Consultar Suplidores ......................*@

                    <p />
                    <p />
                    <div class="form-group col-md-3" style="margin: auto;">
                        <a class="rz-border-radius-4 shadow border border-4 btn btn-lg btn btn-warning"
                            data-toggle="tooltip" data-placement="right" title="Ingresar al reporte"
                            href="reportesuplidores">Suplidores
                            <span class="oi oi-person">
                            </span>
                        </a>
                    </div>
                </div>
            </div>
            <br>

            @*...................... Botones ......................*@

            <div class="card-footer">

                <div class="form-group text-center" display: inline-block>

                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                        <span class="oi oi-file"> Nuevo</span>
                    </button>

                    <button type="submit" class="btn btn-lg btn-success">
                        <span class="oi oi-document"> Guardar</span>
                    </button>

                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                        <span class="oi oi-trash"> Eliminar</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code
{

#nullable disable // Para quitar el aviso de nulls

    Suplidor suplidor = new Suplidor();

    [Inject]
    public SuplidorBLL suplidorBLL { get; set; } // Inyectando BLL


    [Parameter]
    public int SuplidorId { get; set; }


    //-----------------------------------------------------------------------

    protected override void OnInitialized()
    {
        suplidor = new Suplidor();

        if (SuplidorId > 0)
        {
            suplidor.SuplidorId = SuplidorId;
            this.Buscar();
        }
    }

    public void Nuevo() // Nuevo suplidor
    {
        suplidor = new Suplidor();
    }

    public void Guardar() // Guardar suplidor
    {
        var suplidor2 = suplidorBLL.ExisteNombreSuplidor(suplidor.Nombre);

        if (suplidor2 == null) //si no existe lo guarda
        {

            if (suplidorBLL.Guardar(suplidor))
            {

                Toast.ShowSuccess($"Suplidor: {suplidor.Nombre}, Guardado correctamente");
                suplidor = new Suplidor();
            }
            else
                Toast.ShowError("No se pudo guardar");

        }
        else // si existe, no guarda porque el nombre le pertenece a otro suplidor o ya existe
        {
            if (suplidor2.Nombre.ToLower() == suplidor.Nombre.ToLower() && suplidor2.SuplidorId == suplidor.SuplidorId)
            {
                if (suplidorBLL.Guardar(suplidor))
                {
                    Toast.ShowSuccess($"Suplidor: {suplidor.Nombre}, Guardado correctamente");
                    suplidor = new Suplidor();
                }
                else
                    Toast.ShowError("No fue posible guardar");
            }
            else
            {
                Toast.ShowError($"Supldor: {suplidor.Nombre}, pertenece a otra persona");
            }
        }
    }

    public void Buscar() // Buscar suplidor
    {
        if (this.suplidor.SuplidorId > 0)
        {
            var Suplidor = suplidorBLL.Buscar(suplidor.SuplidorId);

            if (Suplidor != null)
            {
                suplidor = Suplidor;
                Toast.ShowSuccess($"Suplidor: {suplidor.Nombre}, encontrado ");
            }
            else
            {
                Toast.ShowWarning($"No existe un suplidor con este Id: {suplidor.SuplidorId}");
            }
        }
    }

    public void Eliminar() // Eliminar suplidor
    {
        bool Eliminar;

        Eliminar = suplidorBLL.Eliminar(suplidor.SuplidorId);

        if (Eliminar)
        {
            suplidor = new Suplidor();

            Toast.ShowSuccess("Eliminado correctamente");
        }
        else
            Toast.ShowError("No fue posible eliminar");
    }
}